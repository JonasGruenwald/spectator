name: Build and Release

on:
  push:
    tags:
      - v*

jobs:
  push-docker:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - runner: ubuntu-latest
            platform: linux/amd64
          - runner: ubuntu-24.04-arm
            platform: linux/arm64
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Extract tag
        id: tag
        run: echo "TAG=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_OUTPUT

      - name: Build and push image
        run: |
          IMAGE_ID=ghcr.io/jonasgruenwald/spectator
          TAG="$IMAGE_ID:${{ steps.tag.outputs.TAG }}-${{ matrix.platform == 'linux/amd64' && 'amd64' || 'arm64' }}"
          docker buildx build \
            --platform ${{ matrix.platform }} \
            --file Dockerfile \
            --tag "$TAG" \
            --push \
            .

  create-manifest:
    runs-on: ubuntu-latest
    needs: [push-docker]
    permissions:
      packages: write
      contents: read
    steps:
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Extract tag
        id: tag
        run: echo "TAG=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')" >> $GITHUB_OUTPUT

      - name: Create and push manifest
        run: |
          IMAGE_ID=ghcr.io/jonasgruenwald/spectator
          VERSION="${{ steps.tag.outputs.TAG }}"
          docker buildx imagetools create -t "$IMAGE_ID:$VERSION" \
            "$IMAGE_ID:$VERSION-amd64" \
            "$IMAGE_ID:$VERSION-arm64"
          docker buildx imagetools create -t "$IMAGE_ID:latest" \
            "$IMAGE_ID:$VERSION-amd64" \
            "$IMAGE_ID:$VERSION-arm64"

  create-release:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./spectator_app
    needs: [create-manifest]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: erlef/setup-beam@v1
        with:
          otp-version: "28"
          gleam-version: "1.12.0"
          rebar3-version: "3"

      - run: gleam deps download
      - run: gleam build
      - run: gleam run -m gleescript

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.version.outputs.VERSION }}
          body: |
            ## Docker Image

            Pull the container image for this release:
            ```bash
            docker pull ghcr.io/jonasgruenwald/spectator:${{ steps.version.outputs.VERSION }}
            ```

            ## Escript

            Download the `spectator_app` escript from the assets below and run:
            ```bash
            chmod +x spectator_app
            ./spectator_app
            ```

            ## Changes
            See [CHANGELOG.md](CHANGELOG.md) for details.
          files: |
            spectator_app/spectator_app
          draft: false
          prerelease: false